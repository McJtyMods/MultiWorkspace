buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

plugins { id "com.modrinth.minotaur" version "2.+" }
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven-publish'
if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.18_tech/gradletools.gradle'
}

repositories {
    maven { url "https://dvs1.progwml6.com/files/maven" } // JEI
    maven { url "https://maven.blamejared.com" } // Patchouli
    maven { url "https://maven.k-4u.nl" } // McJtyLib, TOP
    maven { url "https://maven.theillusivec4.top/" } // Curios
}

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: "2022.06.05-1.18.2"
//    accessTransformer = file('workspace/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Nice {
                    source project(':Nice').sourceSets.main
                }
                NEW {
                    source project(':NEW').sourceSets.main
                }
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                DeepResonance {
                    source project(':DeepResonance').sourceSets.main
                }
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}
                InControl {
                    source project(':InControl').sourceSets.main
                }
                FxControl {
                    source project(':FxControl').sourceSets.main
                }
                RFToolsStorage {
                    source project(':RFToolsStorage').sourceSets.main
                }
                RFToolsBase {
                    source project(':RFToolsBase').sourceSets.main
                }
                RFToolsControl {
                    source project(':RFToolsControl').sourceSets.main
                }
                RFToolsDimensions {
                    source project(':RFToolsDimensions').sourceSets.main
                }
                RFToolsPower {
                    source project(':RFToolsPower').sourceSets.main
                }
                RFToolsBuilder {
                    source project(':RFToolsBuilder').sourceSets.main
                }
                RFToolsUtility {
                    source project(':RFToolsUtility').sourceSets.main
                }
                Restrictions {
                    source project(':Restrictions').sourceSets.main
                }
                SignTastic {
                    source project(':SignTastic').sourceSets.main
                }
                Trinkets {
                    source project(':Trinkets').sourceSets.main
                }
                LostCities {
                    source project(':LostCities').sourceSets.main
                }
                ModXNet {
                    source project(':ModXNet').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Nice {
                    source project(':Nice').sourceSets.main
                }
                NEW {
                    source project(':NEW').sourceSets.main
                }
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                DeepResonance {
                    source project(':DeepResonance').sourceSets.main
                }
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}
                InControl {
                    source project(':InControl').sourceSets.main
                }
                FxControl {
                    source project(':FxControl').sourceSets.main
                }
                RFToolsStorage {
                    source project(':RFToolsStorage').sourceSets.main
                }
                RFToolsBase {
                    source project(':RFToolsBase').sourceSets.main
                }
                RFToolsControl {
                    source project(':RFToolsControl').sourceSets.main
                }
                RFToolsDimensions {
                    source project(':RFToolsDimensions').sourceSets.main
                }
                RFToolsPower {
                    source project(':RFToolsPower').sourceSets.main
                }
                RFToolsBuilder {
                    source project(':RFToolsBuilder').sourceSets.main
                }
                RFToolsUtility {
                    source project(':RFToolsUtility').sourceSets.main
                }
                Restrictions {
                    source project(':Restrictions').sourceSets.main
                }
                SignTastic {
                    source project(':SignTastic').sourceSets.main
                }
                Trinkets {
                    source project(':Trinkets').sourceSets.main
                }
                LostCities {
                    source project(':LostCities').sourceSets.main
                }
                ModXNet {
                    source project(':ModXNet').sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'
            args '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Nice {
                    source project(':Nice').sourceSets.main
                }
                NEW {
                    source project(':NEW').sourceSets.main
                }
                //Ariente {
                    //source project(':Ariente').sourceSets.main
                //}
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                DeepResonance {
                    source project(':DeepResonance').sourceSets.main
                }
                //HoloGui {
                    //source project(':HoloGui').sourceSets.main
                //}
                InControl {
                    source project(':InControl').sourceSets.main
                }
                FxControl {
                    source project(':FxControl').sourceSets.main
                }
                RFToolsStorage {
                    source project(':RFToolsStorage').sourceSets.main
                }
                RFToolsBase {
                    source project(':RFToolsBase').sourceSets.main
                }
                RFToolsControl {
                    source project(':RFToolsControl').sourceSets.main
                }
                RFToolsDimensions {
                    source project(':RFToolsDimensions').sourceSets.main
                }
                RFToolsPower {
                    source project(':RFToolsPower').sourceSets.main
                }
                RFToolsBuilder {
                    source project(':RFToolsBuilder').sourceSets.main
                }
                RFToolsUtility {
                    source project(':RFToolsUtility').sourceSets.main
                }
                Restrictions {
                    source project(':Restrictions').sourceSets.main
                }
                SignTastic {
                    source project(':SignTastic').sourceSets.main
                }
                Trinkets {
                    source project(':Trinkets').sourceSets.main
                }
                LostCities {
                    source project(':LostCities').sourceSets.main
                }
                ModXNet {
                    source project(':ModXNet').sourceSets.main
                }
            }
        }
    }
}

jar {
  duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    mc()
    jei()
    top()
    curios()
    patchouli()

    //implementation project(':TheOneProbe')
    implementation project(':McJtyLib')
    implementation project(':Nice')
    implementation project(':NEW')
    //implementation project(':Ariente')
    //implementation project(':ArienteWorld')
    implementation project(':DeepResonance')
    //implementation project(':HoloGui')
    implementation project(':InControl')
    implementation project(':FxControl')
    implementation project(':LostCities')
    implementation project(':RFToolsStorage')
    implementation project(':RFToolsBase')
    implementation project(':RFToolsControl')
    implementation project(':RFToolsDimensions')
    implementation project(':RFToolsPower')
    implementation project(':RFToolsBuilder')
    implementation project(':RFToolsUtility')
    implementation project(':Restrictions')
    implementation project(':SignTastic')
    implementation project(':Trinkets')
    implementation project(':ModXNet')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
